name: CI

on:
  pull_request:
  push:
    branches: [main, dev]

jobs:
  generate-matrix:
    name: "Generate matrix from cabal"
    outputs: 
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    runs-on: ubuntu-latest
    steps:
      - name: Extract the tested GHC versions
        id: set-matrix
        uses: kleidukos/get-tested@v0.1.6.0
        with:
          cabal-file: text-ascii.cabal
          ubuntu: true
          version: 0.1.6.0
  tests:
    name: ${{ matrix.ghc }}
    needs: generate-matrix
    runs-on: ${{ matrix.os }}
    strategy:
      matrix: ${{ fromJSON(needs.generate-matrix.outputs.matrix) }}
    steps:
    - uses: actions/checkout@v2
      name: Checkout base repo
    - uses: haskell/actions/setup@v1
      id: haskell-setup
      name: Setup Haskell
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: 'latest'
    - uses: actions/checkout@v2
      name: Get cabal-extras
      with:
        repository: kozross/cabal-extras
        path: ./cabal-extras
    - name: Configure main repo
      run: cabal configure --disable-optimization
    - name: Configure cabal-docspec
      working-directory: cabal-extras/cabal-docspec
      run: cabal configure -w ghc --disable-optimization
    - name: Cache
      uses: actions/cache@v3.3.3
      with:
        path: ${{ steps.setup-haskell.outputs.cabal-store }}
        key: ${{ runner.os }}-ghc-${{ matrix.ghc }}-cabal-${{ hashFiles('**/plan.json') }}
        restore-keys: ${{ runner.os }}-ghc-${{ matrix.ghc }}-
    - name: Install base dependencies
      run: cabal build --only-dependencies
    - name: Install cabal-docspec
      working-directory: cabal-extras/cabal-docspec
      run: cabal install --install-method=copy --installdir=${{ runner.temp }} --overwrite-policy=always
    - name: Build base repo
      run: |
        cabal build
    - name: Run doctests
      run: ${{ runner.temp }}/cabal-docspec --trace-process --timeout 30 --strip-comments --builddir "${{ github.workspace }}/dist-newstyle"
